:root {
 --blanco: #ffffff;
 --oscuro: #212121;
 --primario: #FFC107;
 --secundario: #0097A7;
 --gris: #757575;
 --grisClaro: #DFE9F3;
 }

/* Globales */
html{
    font-size: 62.5%;
    box-sizing: border-box; /* hack para Box Model*/
}

*, *:before, *:after {
    box-sizing: inherit;
  }

body{
    font-size: 16px; /* 1rem = 10 px;*/
    font-family: 'krub', sans-serif;
    background-image: linear-gradient(to top, #DFE9F3 0%, var(--blanco) 100%); /* el 
    background-image es para colocar color de fondo con degradado junto con la propiedad
    linear-gradiente y se le indica quue va de abajo hacia arriba con to top, luego se le 
    indica en hexadecimal el color de abajo que va desde el 0% y luego con var se elige 
    el color que tenemos ya definido como blanco en la paleta de colores que va arriba 
    en un 100%*/
}

.contenedor{
    max-width: 120rem;
    margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;
}

.boton{
background-color: var(--secundario);
color: var(--blanco);
padding: 1rem 3rem;
margin-top: 2rem;
font-size: 2rem;
text-decoration: none;
text-transform: uppercase;
font-weight: bold;
border-radius: .5rem;
width: 90%;
text-align: center;
}

@media (min-width: 768px) {
    .boton{
        width: auto;
    }
}

.sombra{
    box-shadow: 5px 0px 15px 0px rgba(43,42,43,0.52); /* es una sombra que se busca en la
    página: https://www.cssmatic.com/box-shadow y para vuscar soporte de lo que se puede usar
    se va a la página: https://caniuse.com/?search=box%20shadow y se busca box shadow y allí 
    te dice en que navegadores se usa*/
    background-color: var(--blanco);
    padding: 2rem; /*separación hacia arriba*/
    border-radius: 1rem;
}

/* Tipografía */
h1 {
    text-align: center;
    font-size: 3.8rem;
    text-align: center;
}

h2{
    font-size: 2.8rem;
    text-align: center;
}

h3{
    font-size: 1.8rem;
    text-align: center;
}
/*h1 span{
    font-size: 2rem;
}*/

/*Títulos*/
.título span {
    font-size: 2rem;
}


/*h1.título span{  /* se coloca este color finalmente por lo de la especificidad, porque
    estamos especificando más por medio de la etiqueta h1 que va con la clase título
    y además se especifica la etiqueta span
    color: var(--oscuro);
    font-family: Krub', sans-serif;
}*/


/*navegación principal*/
.nav-bg{
    background-color: var(--secundario);
}

.navegación_principal{
    padding: 1rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    
}

@media (min-width: 480px){
    .navegación_principal{
        flex-direction: row;
        justify-content: space-between;
    }
        
}

/* ejemplo 1: éste de 480 es para ver el sitio responsivo en un teléfono
@media (min-width: 480px){
    .navegación_principal{
        flex-direction: row;
    }
*/

/* ejemplo 2: éste de 780 es para ver el sitio responsivo en una táblet
@media (min-width: 780px){
    .navegación_principal{
        flex-direction: row;
    }
*/

/* ejemplo 3: éste de 1140 es para ver el sitio en un Laptop o PC de escritorio
@media (min-width: 1140px){
    .navegación_principal{
        flex-direction: row;
    }
*/

/* ejemplo 3: éste de 1400 también es considerado para equipos
@media (min-width: 1400px){
    .navegación_principal{
        flex-direction: row;
    }
No es digamos un estpándar, pero si es lo que todo mundo utiliza y la mayoría de framework utiliza
*/
.navegación_principal a{
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem; /* 1rem significa en todas las direcciones*/
}

.navegación_principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}

@media (main-width: 480px) {
    h1{

    }

}

@media (main-width: 768px) {
    h1{

    }

}

/*Hero*/
.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    margin-bottom: 2rem; /* para separar el header del contenido central donde están 
    mis servicios*/
}

.contenido-hero{
    position: absolute;
    background: rgba(0, 0, 0, .7); /** anterior **/
    background-color: rgb(0 0 0 / 70%); /**sintaxis nueva**/
    width: 100;
    height: 100;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: flex; /*agrega las propiedades de flexbox*/
    /*En felxbox el contenido crece automáticamente en cierto lugar.
    En flexbozx solo tienes acceso a una sola dimensión, ya sea (row-->filas o 
    column-->columnas). Se puede alinear el contenido de izquierda a derecha o de arriba 
    hacia abajo cuando defines la dirección de flexbox*/
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.ubicacion {
    display: flex;
    align-items: flex-end;
}

/*Servicios*/
/* se coloca todo dentro del media query para agregarle la propiedad de que esta sección de 
código sea responsiva y se adapte a las pantallas de los diferentes dispositivos*/

@media (min-width: 768px){
    .servicios{
        display: grid; /*agrega las propiedades de CSS Grid*/
        /*CSS Grid te permite definir la ubicación y tamaño de los elementos de un sitio Web.
        En CSS Grid el contenido se agrupa dentro de un área definida. En cierta forma, es como
        una tabla en HTML, con la ventaja de mayor flexibilidad y control sobre su diseño.
        En CSS Grid tienes acceso a las dos dimensiones al mismo tiempo (filas y columnas)*/
        grid-template-columns: 33.3% 33.3% 33.3%; /*como son tres columnas entonces se vidide el 
        100% entre 3*/
        /*También  se puede dividir en tres fracciones usando la siguiente línea de código:
        grid-template-columns: 1fr 1fr 1fr; y así se define un poco más sencillo. También se 
        puede de la siguiente forma: grid-template-columns: repeat(3, 1fr); --> repite tres
        veces 1 fracción que el grid hace el cálculo y la divide entres partes iguales*/
        grid-template-rows: 200px 800px;
        column-gap: 1rem; /* se usa para la separación entre las columnas de los servicios*/
    
    }
}

.servicio{
    display: flex;
    flex-direction: column; /* cuando se usa ésta línea ya no se usa el justify-content sino 
    que se utiliza la siguiente línea: */
    align-items: center;
}

.servicio h3{
    color: var(--secundario);
    font-weight: normal;

}

.servicio p{
    line-height: 2;
    text-align: center;

}

.servicio .iconos{
    display: flex;
    flex-direction: column;
    height: 15rem;
    width: 10rem;
    background-color: var(--primario);
    border-radius: 50%; 
    /*si habilitamos diaplay flex, éste nos da acceso a Justify-content y a 
    space-evenly*/
   justify-content: space-evenly; 
   align-items: center; /*alinear los íconos al centro*/
}
